
   loop_
     _sub_category.id
     _sub_category.description

         ?       ?

   stop_


     loop_
    _category_group_list.id
    _category_group_list.parent_id
    _category_group_list.description

              'inclusive_group'      .
;
             Categories that belong to the NMR-STAR dictionary.
;

'deposited_data_files'
'inclusive_group'
;
Categories that capture information about the data files that are uploaded for depositions.
;

'entry_interview'
'inclusive_group'
;
Categories that record an overview of the information to be deposited by an author.
;

'experiment_list'
'inclusive_group'
;
Categories that record the details about the experiments performed.
;

'study_list'
'inclusive_group'
;
Categories that describe a study of a molecular system that includes data from one or more entries.
;

'entry_information'
'inclusive_group'
;
Categories that describe an entry.
;

'citations'
'inclusive_group'
;
Categories that provide bibliographic references.
;

'chem_comp'
'inclusive_group'
;
Categories that describe chemical components of entities and molecular assemblies.
;

'entity'
'inclusive_group'
;
Categories that describe the polymer and non-polymer molecules that make up a molecular assembly.
;

'assembly'
'inclusive_group'
;
Categories that describe a molecular assembly.
;

'assembly_annotation'
'inclusive_group'
;
Categories that provide annotations for a molecular assembly.
;

'assembly_subsystems'
'inclusive_group'
;
Categories that describe subsystems of a molecular assembly.
;

'natural_source'
'inclusive_group'
;
Categories that describe the organism or other body found in nature that produces a molecular entity.
;

'experimental_source'
'inclusive_group'
;
Categories that describe the system used to produce a molecular entity for scientific experiments.
;

'sample'
'inclusive_group'
;
Categories that describe the contents and other details about the samples used in scientific experiments.
;

'sample_conditions'
'inclusive_group'
;
Categories that describe the experimental conditions used in conducting individual scientific experiments.
;

'molecule_purity'
'inclusive_group'
;
Categories that describe the measured purity of the molecular entity.
;

'software'
'inclusive_group'
;
Categories that describe computer software.
;

'method'
'inclusive_group'
;
Categories that describe software or physical methods used to produce a product.
;

'nmr_spectrometer'
'inclusive_group'
;
Categories that describe an NMR spectrometer.
;

'nmr_spectrometer_list'
'inclusive_group'
;
Categories that define a list of NMR spectrometers and their properties.
;

'nmr_spectrometer_probe'
'inclusive_group'
;
Categories that describe an NMR spectrometer probe.
;

'nmr_spectrometer_expt_list'
'inclusive_group'
;
Categories that define a list of NMR spectrometer experiments.
;

'nmr_spectrometer_expt'
'inclusive_group'
;
Categories that describe an NMR spectrometer experiment in detail.
;

'nmr_spectral_processing'
'inclusive_group'
;
Categories that describe how the data from an NMR spectrometer experiment has been processed.
;

'computer'
'inclusive_group'
;
Categories that describe a computer.
;

'chem_shift_reference'
'inclusive_group'
;
Categories that capture information about the compounds and parameters used to reference NMR chemical shifts.
;

'assigned_chemical_shifts'
'inclusive_group'
;
Categories that capture assigned chemical shift values and links to the samples, sample conditions, NMR experiments, and other information about how the assigned chemical shifts were derived.
;

'coupling_constants'
'inclusive_group'
;
Categories that capture coupling constant values and links to the samples, sample conditions, NMR experiments, and other information about how the coupling constants were derived.
;

'spectral_peak_list'
'inclusive_group'
;
Categories that capture the properties of NMR spectral peaks, spectral parameters, and links to the NMR experiments and other information regarding the data.
;

'value_derivation'
'inclusive_group'
;
?
;

'chem_shift_isotope_effect'
'inclusive_group'
;
Categories that capture chemical shift isotope effect values and links to the samples, sample conditions, NMR experiments, and other information about how the values were derived.
;

'chem_shift_interaction_diff'
'inclusive_group'
;
Categories that capture chemical shift deviations caused by molecular interactions and links to the samples, sample conditions, NMR experiments, and other information about how the deviation values were derived.
;

'chem_shift_anisotropy'
'inclusive_group'
;
Categories that capture chemical shift anisotropy values and links to the samples, sample conditions, NMR experiments, and other information about how the values were derived.
;

'theoretical_chem_shifts'
'inclusive_group'
;
Categories that capture theoretical chemical shift values and links to the samples, sample conditions, NMR experiments, and other information about how the values were derived.
;

'chem_shifts_calc_type'
'inclusive_group'
;
Categories that define the type of calculation used to generate a list of theoretical chemical shifts for a molecule.
;

'chem_shielding_tensors'
'inclusive_group'
;
Categories that describe the chemical shielding tensors for a theoretical chemical shift calculation.
;

'rdcs'
'inclusive_group'
;
Categories that capture residual dipolar coupling values and links to the samples, sample conditions, NMR experiments, and other information about how the values were derived.
;

'dipolar_couplings'
'inclusive_group'
;
Categories that capture dipolar coupling values and links to the samples, sample conditions, NMR experiments, and other information about how the values were derived.
;

'spectral_density_values'
'inclusive_group'
;
Categories that capture spectral density values and links to the samples, sample conditions, NMR experiments, and other information about how the values were derived.
;

'other_data_types'
'inclusive_group'
;
Categories that capture the values for other kinds of data not modeled in specific category groups in the dictionary and links to the samples, sample conditions, NMR experiments, and other information about how the data were derived.
;

'h_exch_rates'
'inclusive_group'
;
Categories that capture hydrogen exchange rate data and links to the samples, sample conditions, NMR experiments, and other information about how the data were derived.
;

'h_exch_protection_factors'
'inclusive_group'
;
Categories that capture hydrogen exchange protection factor data and links to the samples, sample conditions, NMR experiments, and other information about how the data were derived.
;

'homonucl_noes'
'inclusive_group'
;
Categories that capture homonuclear NOE values and links to the samples, sample conditions, NMR experiments, and other information about how the values were derived.
;

'heteronucl_noes'
'inclusive_group'
;
Categories that capture heteronuclear NOE values and links to the samples, sample conditions, NMR experiments, and other information about how the values were derived.
;

'heteronucl_t1_relaxation'
'inclusive_group'
;
Categories that capture heteronuclear T1 relaxation values and links to the samples, sample conditions, NMR experiments, and other information about how the data were derived.
;

'heteronucl_t1rho_relaxation'
'inclusive_group'
;
Categories that capture heteronuclear T1rho relaxation values and links to the samples, sample conditions, NMR experiments, and other information about how the data were derived.
;

'heteronucl_t2_relaxation'
'inclusive_group'
;
Categories that capture heteronuclear T2 relaxation values and links to the samples, sample conditions, NMR experiments, and other information about how the data were derived.
;

'dipole_dipole_relaxation'
'inclusive_group'
;
Categories that capture dipole-dipole relaxation values and links to the samples, sample conditions, NMR experiments, and other information about how the data were derived.
;

'dipole_dipole_cross_correlations'
'inclusive_group'
;
Categories that capture dipole-dipole cross correlation data and links to the samples, sample conditions, NMR experiments, and other information about how the data were derived.
;

'dipole_csa_cross_correlations'
'inclusive_group'
;
Categories that capture dipole-CSA cross correlation data and links to the samples, sample conditions, NMR experiments, and other information about how the data were derived.
;

'order_parameters'
'inclusive_group'
;
Categories that capture order parameter values and links to the samples, sample conditions, NMR experiments, and other information about how the data were derived.
;

'ph_titration'
'inclusive_group'
;
Categories that capture the pKa or pHmid values derived from a pH titration experiment and links to the experimental details.
;

'ph_param_list'
'inclusive_group'
;
Categories that capture the NMR spectral parameters derived from a pH titration experiment.
;

'd_h_fractionation_factors'
'inclusive_group'
;
Categories that capture deuterium-hydrogen fractionation factor values and links to the samples, sample conditions, NMR experiments, and other information about how the data were derived.
;

'deduced_secd_struct_features'
'inclusive_group'
;
Categories that capture secondary structure features deduced from experimental data, but not derived from a three-dimensional structure and links to the data used to deduce the secondary structure features.
;

'deduced_hydrogen_bonds'
'inclusive_group'
;
Categories that capture hydrogen bonds information deduced from experimental data, but not derived from a three-dimensional structure and links to the data used to deduce the hydrogen bonds.
;

'conformer_statistics'
'inclusive_group'
;
Categories that capture statistics derived from the three-dimensional conformers calculated for a biomolecule.
;

'constraint_statistics'
'inclusive_group'
;
Categories that capture statistics derived from the constraints used to calculate the three-dimension conformers for a biomolecule and the constraint violations.
;

'representative_conformer'
'inclusive_group'
;
Categories that capture the atomic coordinates for a representative conformer of a biomolecular system and links to the experimental conditions and data used to derive the conformer.
;

'conformer_family_coord_set'
'inclusive_group'
;
Categories that capture the atomic coordinates for a family of conformers for a biomolecular system and links to the experimental conditions and data used to calculate the conformer family.
;

'force_constants'
'inclusive_group'
;
Categories that describe the values for the force constants used in calculating a family of conformers for a biomolecular system.
;

'angular_order_parameters'
'inclusive_group'
;
Categories that capture a set of angular order parameters calculated from a family of conformers.
;

'tertiary_struct_elements'
'inclusive_group'
;
Categories that describe the tertiary structure elements found in the conformers calculated for a biomolecular system.
;

'secondary_structs'
'inclusive_group'
;
Categories that describe the secondary structure elements found in the conformers calculated for a biomolecular system.
;

'bond_annotation'
'inclusive_group'
;
Categories that capture annotations for the bonds found in the conformers calculated for a biomolecular system.
;

'structure_interactions'
'inclusive_group'
;
Categories that describe the interactions between molecules in a biomolecular system that have been found through the analysis of the calculated conformers.
;

'other_struct_features'
'inclusive_group'
;
Categories that provide a means for describing other structure features not specifically defined in other category groups.
;

'distance_constraints'
'inclusive_group'
;
Categories that capture the distance constraints used to calculate one or more conformers for a biomolecular system.
;

'floating_chiral_stereo_assign'
'inclusive_group'
;
Categories that capture the floating chirality stereo assignments used in calculating the conformers for a biomolecular system.
;

'torsion_angle_constraints'
'inclusive_group'
;
Categories that capture the torsion angle distance constraints used to calculate one or more conformers for a biomolecular system.
;

'rdc_constraints'
'inclusive_group'
;
Categories that capture the residual dipolar coupling constraints used to calculate one or more conformers for a biomolecular system.
;

'j_three_bond_constraints'
'inclusive_group'
;
Categories that capture the three bond scalar coupling constraints used to calculate one or more conformers for a biomolecular system.
;

'ca_cb_chem_shift_constraints'
'inclusive_group'
;
Categories that capture the protein CA and CB chemical shift constraints used to calculate one or more conformers for a biomolecular system.
;

'h_chem_shift_constraints'
'inclusive_group'
;
Categories that capture the proton chemical shift constraints used to calculate one or more conformers for a biomolecular system.
;

'other_constraints'
'inclusive_group'
;
Categories that capture values for other kinds of constraints not specifically defined in other category groups used to calculate one or more conformers for a biomolecular system.
;

     stop_



####################
## ITEM_TYPE_LIST ##
####################
#
#
#  The regular expressions defined here are not compliant
#  with the POSIX 1003.2 standard as they include the 
#  '\n' and '\t' special characters. These regular expressions
#  have been tested using the version 0.12 of Richard Stallman's
#  GNU regular expression libary in POSIX mode. 
#
#                                                                            
# For some data items, a standard syntax is assumed. The syntax is           
#   described for each data item in the dictionary, but is summarized here:  
#                                                                            
#   Names:     The family name(s) followed by a comma, precedes the first    
#              name(s) or initial(s).                                        
#                                                                            
#   Telephone numbers:                                                       
#              The international code is given in brackets and any extension 
#              number is preceded by 'ext'.                                  
#                                                                            
#   Dates:     In the form yyyy-mm-dd.                                       
#                                                                            
##############################################################################



     loop_
    _item_type_list.code
    _item_type_list.primitive_code
    _item_type_list.construct
    _item_type_list.detail
               code      char
               '[_,.;:"&<>()/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words ...
;
               ucode      uchar
               '[_,.;:"&<>()/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words  (case insensitive) ...
;
               line      char
               '[][ \t_(),.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              char item types / multi-word items ...
;
               uline      uchar
               '[][ \t_(),.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              char item types / multi-word items (case insensitive)...
;
               text      char
               '[][ \n\t()_,.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              text item types / multi-line text ...
;
               int       numb
               '-?[0-9]+'
;              int item types are the subset of numbers that are the negative 
               or positive integers.
;
               float     numb
          '-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)?'
;              int item types are the subset of numbers that are the floating
               numbers.
;
               name      uchar
               '_[_A-Za-z0-9]+\.[][_A-Za-z0-9%-]+'
;              name item types take the form...
;
               idname    uchar
               '[_A-Za-z0-9]+'
;              idname item types take the form...
;
               any       char
               '.*'
;              A catch all for items that may take any form...
;
               yyyy-mm-dd  char
                '[0-9]?[0-9]?[0-9][0-9]-[0-9]?[0-9]-[0-9][0-9]'
;
               Standard format for CIF dates.
;
               uchar3    uchar
              '[+]?[A-Za-z0-9][A-Za-z0-9][A-Za-z0-9]'
;
               data item for 3 character codes
;
               uchar1    uchar
              '[+]?[A-Za-z0-9]'
;
               data item for 1 character codes
;
               yes_no   char
               '.?.?.?'
;
               data item for bolean codes that have values of 'yes' or 'no'
;
               symop    char
               '([1-9]|[1-9][0-9]|1[0-8][0-9]|19[0-2])(_[1-9][1-9][1-9])?'
;              symop item types take the form n_klm, where n refers to the
               symmetry operation that is applied to the coordinates in the
               ATOM_SITE category identified by _atom_site_label.  It must
               match a number given in _symmetry_equiv_pos_site_id.

               k, l, and m refer to the translations that are subsequently
               applied to the symmetry transformed coordinates to generate
               the atom used.  These translations (x,y,z) are related to
               (k,l,m) by
                     k = 5 + x
                     l = 5 + y
                     m = 5 + z
               By adding 5 to the translations, the use of negative numbers
               is avoided.
;
               atcode      char
               '[][ _(),.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              Character data type for atom names  ...
;
               yyyy-mm-dd:hh:mm  char
    '[0-9]?[0-9]?[0-9][0-9]-[0-9]?[0-9](-[0-9]?[0-9])?(:[0-9]?[0-9]:[0-9][0-9])?'
;
               Standard format for CIF dates with optional time stamp.
;
               fax      uchar
               '[_,.;:"&<>/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words  (case insensitive) ...
;
               phone      uchar
               '[_,.;:"&<>/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words  (case insensitive) ...
;
               email      uchar
               '[_,.;:"&<>/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words  (case insensitive) ...
;
               int-range       numb
               '-?[0-9]+(--?[0-9]+)?'
;              int item types are the subset of numbers that are the negative 
               or positive integers with optional range.
;
               float-range     numb

'-?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)?(--?(([0-9]+)[.]?|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)?)?'
;              int item types are the subset of numbers that are the floating
               numbers.
;
              code30  char
        '.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?.?'
        'A string value, not allowed to exceed 30 characters.'
#
               binary    char
;\n--CIF-BINARY-FORMAT-SECTION--\n\
[][ \n\t()_,.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*\
\n--CIF-BINARY-FORMAT-SECTION----
;
;              binary items are presented as MIME-like ascii-encoded
               sections in an imgCIF.  In a CBF, raw octet streams
               are used to convey the same information.
;


           label       char
    \$[_,.;:"&<>()/\{}'`~!@#$%A-Za-z0-9*|+-]* 
;   A value that begins with the character '$' and points to a saveframe.
;

    stop_

#####################
## ITEM_UNITS_LIST ##
#####################

     loop_
    _item_units_list.code
    _item_units_list.detail
#
     'metres'                 'metres'
     'centimetres'            'centimetres (meters * 10^( -2))'
     'millimetres'            'millimetres (meters * 10^( -3))'
     'nanometres'             'nanometres  (meters * 10^( -9))'
     'angstroms'              'angstroms   (meters * 10^(-10))'
     'picometres'             'picometres  (meters * 10^(-12))'
     'femtometres'            'femtometres (meters * 10^(-15))'
#
     'reciprocal_centimetres' 'reciprocal centimetres (meters * 10^( -2)^-1)'
     'reciprocal_millimetres' 'reciprocal millimetres (meters * 10^( -3)^-1)'
     'reciprocal_nanometres'  'reciprocal nanometres  (meters * 10^( -9)^-1)'
     'reciprocal_angstroms'   'reciprocal angstroms   (meters * 10^(-10)^-1)'
     'reciprocal_picometres'  'reciprocal picometres  (meters * 10^(-12)^-1)'
#
     'nanometres_squared'     'nanometres squared (meters * 10^( -9))^2'
     'angstroms_squared'      'angstroms squared  (meters * 10^(-10))^2'
     '8pi2_angstroms_squared' '8pi^2 * angstroms squared (meters * 10^(-10))^2'
     'picometres_squared'     'picometres squared (meters * 10^(-12))^2'
#
     'nanometres_cubed'       'nanometres cubed (meters * 10^( -9))^3'
     'angstroms_cubed'        'angstroms cubed  (meters * 10^(-10))^3'
     'picometres_cubed'       'picometres cubed (meters * 10^(-12))^3'
#
     'kilopascals'            'kilopascals'
     'gigapascals'            'gigapascals'
#
     'hours'                  'hours'
     'minutes'                'minutes'
     'seconds'                'seconds'
     'microseconds'           'microseconds'
#
     'degrees'                'degrees (of arc)'
#
     'degrees_per_minute'     'degrees (of arc) per minute'
#
     'celsius'                'degrees (of temperature) Celsius'
     'kelvins'                'degrees (of temperature) Kelvin'
#
     'electrons'              'electrons'
#
     'electrons_squared'      'electrons squared'
#
     'electrons_per_nanometres_cubed'
; electrons per nanometres cubed (meters * 10^( -9))^3
;
     'electrons_per_angstroms_cubed'
; electrons per angstroms  cubed (meters * 10^(-10))^3
;
     'electrons_per_picometres_cubed'
; electrons per picometres cubed (meters * 10^(-12))^3
;
     'kilowatts'              'kilowatts'
     'milliamperes'           'milliamperes'
     'kilovolts'              'kilovolts'
#
     'arbitrary'
; arbitrary system of units.
;
#
     'angstroms_degrees'      'angstroms * degrees'
#
     'degrees_squared'        'degrees squared'
#
     'mg_per_ml'              'milliliter per milligram'
#
     'ml_per_min'             'milliliter per minute'
#
     'milliliters'             'liter / 1000'
#
     'milligrams'             'grams / 1000'
#
     'megadaltons'            'megadaltons'
     'microns_squared'        'microns squared'
     'microns'                'microns'
#     'millimeters'            'millimeters'
     'electrons_angstrom_squared'   'electrons square angstrom'
     'electron_volts'         'electron volts'
#     'mg/ml'                  'mg per milliliter'
     'millimolar'             'millimolar'
     'megagrams_per_cubic_metre'       'megagrams per cubic metre' 
     'pixels_per_millimetre'      'pixels per millimetre'
     'counts'                 'counts'
     'counts_per_photon'      'counts per photon'
#
     loop_
    _item_units_conversion.from_code
    _item_units_conversion.to_code
    _item_units_conversion.operator
    _item_units_conversion.factor
###
     'metres'                   'centimetres'              '*'   1.0E+02
     'metres'                   'millimetres'              '*'   1.0E+03
     'metres'                   'nanometres'               '*'   1.0E+09
     'metres'                   'angstroms'                '*'   1.0E+10
     'metres'                   'picometres'               '*'   1.0E+12
     'metres'                   'femtometres'              '*'   1.0E+15

     'centimetres'              'millimetres'              '*'   1.0E+01
     'centimetres'              'nanometres'               '*'   1.0E+07
     'centimetres'              'angstroms'                '*'   1.0E+08
     'centimetres'              'picometres'               '*'   1.0E+10
     'centimetres'              'femtometres'              '*'   1.0E+13
#
     'millimetres'              'centimetres'              '*'   1.0E-01
     'millimetres'              'nanometres'               '*'   1.0E+06
     'millimetres'              'angstroms'                '*'   1.0E+07
     'millimetres'              'picometres'               '*'   1.0E+09
     'millimetres'              'femtometres'              '*'   1.0E+12
#
     'nanometres'               'centimetres'              '*'   1.0E-07
     'nanometres'               'millimetres'              '*'   1.0E-06
     'nanometres'               'angstroms'                '*'   1.0E+01
     'nanometres'               'picometres'               '*'   1.0E+03
     'nanometres'               'femtometres'              '*'   1.0E+06
#
     'angstroms'                'centimetres'              '*'   1.0E-08
     'angstroms'                'millimetres'              '*'   1.0E-07
     'angstroms'                'nanometres'               '*'   1.0E-01
     'angstroms'                'picometres'               '*'   1.0E+02
     'angstroms'                'femtometres'              '*'   1.0E+05
#
     'picometres'               'centimetres'              '*'   1.0E-10
     'picometres'               'millimetres'              '*'   1.0E-09
     'picometres'               'nanometres'               '*'   1.0E-03
     'picometres'               'angstroms'                '*'   1.0E-02
     'picometres'               'femtometres'              '*'   1.0E+03
#
     'femtometres'              'centimetres'              '*'   1.0E-13
     'femtometres'              'millimetres'              '*'   1.0E-12
     'femtometres'              'nanometres'               '*'   1.0E-06
     'femtometres'              'angstroms'                '*'   1.0E-05
     'femtometres'              'picometres'               '*'   1.0E-03
###
     'reciprocal_centimetres'   'reciprocal_millimetres'   '*'   1.0E-01
     'reciprocal_centimetres'   'reciprocal_nanometres'    '*'   1.0E-07
     'reciprocal_centimetres'   'reciprocal_angstroms'     '*'   1.0E-08
     'reciprocal_centimetres'   'reciprocal_picometres'    '*'   1.0E-10
#
     'reciprocal_millimetres'   'reciprocal_centimetres'   '*'   1.0E+01
     'reciprocal_millimetres'   'reciprocal_nanometres'    '*'   1.0E-06
     'reciprocal_millimetres'   'reciprocal_angstroms'     '*'   1.0E-07
     'reciprocal_millimetres'   'reciprocal_picometres'    '*'   1.0E-09
#
     'reciprocal_nanometres'    'reciprocal_centimetres'   '*'   1.0E+07
     'reciprocal_nanometres'    'reciprocal_millimetres'   '*'   1.0E+06
     'reciprocal_nanometres'    'reciprocal_angstroms'     '*'   1.0E-01
     'reciprocal_nanometres'    'reciprocal_picometres'    '*'   1.0E-03
#
     'reciprocal_angstroms'     'reciprocal_centimetres'   '*'   1.0E+08
     'reciprocal_angstroms'     'reciprocal_millimetres'   '*'   1.0E+07
     'reciprocal_angstroms'     'reciprocal_nanometres'    '*'   1.0E+01
     'reciprocal_angstroms'     'reciprocal_picometres'    '*'   1.0E-02
#
     'reciprocal_picometres'    'reciprocal_centimetres'   '*'   1.0E+10
     'reciprocal_picometres'    'reciprocal_millimetres'   '*'   1.0E+09
     'reciprocal_picometres'    'reciprocal_nanometres'    '*'   1.0E+03
     'reciprocal_picometres'    'reciprocal_angstroms'     '*'   1.0E+01
###
     'nanometres_squared'       'angstroms_squared'        '*'   1.0E+02
     'nanometres_squared'       'picometres_squared'       '*'   1.0E+06
#
     'angstroms_squared'        'nanometres_squared'       '*'   1.0E-02
     'angstroms_squared'        'picometres_squared'       '*'   1.0E+04
     'angstroms_squared'        '8pi2_angstroms_squared'   '*'   78.9568

#
     'picometres_squared'       'nanometres_squared'       '*'   1.0E-06
     'picometres_squared'       'angstroms_squared'        '*'   1.0E-04
###
     'nanometres_cubed'         'angstroms_cubed'          '*'   1.0E+03
     'nanometres_cubed'         'picometres_cubed'         '*'   1.0E+09
#
     'angstroms_cubed'          'nanometres_cubed'         '*'   1.0E-03
     'angstroms_cubed'          'picometres_cubed'         '*'   1.0E+06
#
     'picometres_cubed'         'nanometres_cubed'         '*'   1.0E-09
     'picometres_cubed'         'angstroms_cubed'          '*'   1.0E-06
###
     'kilopascals'              'gigapascals'              '*'   1.0E-06
     'gigapascals'              'kilopascals'              '*'   1.0E+06
###
     'hours'                    'minutes'                  '*'   6.0E+01
     'hours'                    'seconds'                  '*'   3.6E+03
     'hours'                    'microseconds'             '*'   3.6E+09
#
     'minutes'                  'hours'                    '/'   6.0E+01
     'minutes'                  'seconds'                  '*'   6.0E+01
     'minutes'                  'microseconds'             '*'   6.0E+07
#
     'seconds'                  'hours'                    '/'   3.6E+03
     'seconds'                  'minutes'                  '/'   6.0E+01
     'seconds'                  'microseconds'             '*'   1.0E+06
#
     'microseconds'             'hours'                    '/'   3.6E+09
     'microseconds'             'minutes'                  '/'   6.0E+07
     'microseconds'             'seconds'                  '/'   1.0E+06
###
     'celsius'                  'kelvins'                  '-'     273.0
     'kelvins'                  'celsius'                  '+'     273.0
###
     'electrons_per_nanometres_cubed'
     'electrons_per_angstroms_cubed'                       '*'   1.0E-03
     'electrons_per_nanometres_cubed'
     'electrons_per_picometres_cubed'                      '*'   1.0E-09
#
     'electrons_per_angstroms_cubed'
     'electrons_per_nanometres_cubed'                      '*'   1.0E+03
     'electrons_per_angstroms_cubed'
     'electrons_per_picometres_cubed'                      '*'   1.0E-06
#
     'electrons_per_picometres_cubed'
     'electrons_per_nanometres_cubed'                      '*'   1.0E+09
     'electrons_per_picometres_cubed'
     'electrons_per_angstroms_cubed'                       '*'   1.0E+06
###
 
  stop_

