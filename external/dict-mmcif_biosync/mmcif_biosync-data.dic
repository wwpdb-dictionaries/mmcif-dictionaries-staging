##############################################################################
#
# File:  mmcif_biosync-data.dic
#                                              
#                        BIOSYNC Dictionary Extension to the                         
#                          Macromolecular CIF Dictionary                       
#
#  This extension dictionary contains definitions describing the details of 
#  synchrotron beamlines and beamline facilities. 
#                                                                          
#
#                              Data Section
#                                                                          
##############################################################################

####################
## ITEM_TYPE_LIST ##
####################
#
#
#  The regular expressions defined here are not compliant
#  with the POSIX 1003.2 standard as they include the
#  '\n' and '\t' special characters.  These regular expressions
#  have been tested using the version 0.12 of Richard Stallman's
#  GNU regular expression libary in POSIX mode.
#
     loop_
    _item_type_list.code
    _item_type_list.primitive_code
    _item_type_list.construct
    _item_type_list.detail
               code      char
               '[_,.;:"&<>/\{}'`~!@#$%A-Za-z0-9*|+-]*'
;              code item types/single words ...
;
               line      char
               '[][ \t_(),.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              char item types / multi-word items ...
;
               uline      uchar
               '[][ \t_(),.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              char item types / multi-word items (case insensitive)...
;

               text      char
                '[][ \n\t()_,.;:"&<>/\{}'`~!@#$%?+=*A-Za-z0-9|^-]*'
;              text item types / multi-line text ...
;
               int       numb
               '-?[0-9]+'
;              int item types are the subset of numbers that are the negative
               or positive integers.
;
               float     numb
               '-?(([0-9]+)|([0-9]*[.][0-9]+))([(][0-9]+[)])?([eE][+-]?[0-9]+)?'
;              int item types are the subset of numbers that are the floating
               numbers.
;
               yyyy-mm-dd  char
                '[0-9]?[0-9]?[0-9][0-9]-[0-9]?[0-9]-[0-9][0-9]'
;
               Standard format for CIF dates.
;
               any       char
               '.*'
;              A catch all for items that may take any form...
;



#####################
## ITEM_UNITS_LIST ##
#####################

     loop_
    _item_units_list.code
    _item_units_list.detail
     'meters'       .
     'centimetres'  'centimetres (meters * 10^( -2))'
     'millimetres'  'millimetres (meters * 10^( -3))'
     'nanometres'   'nanometres  (meters * 10^( -9))'
     'angstroms'    'angstroms   (meters * 10^(-10))'
     'celsius'      'degrees (of temperature) Celsius'
     'kelvins'      'degrees (of temperature) Kelvin'
     'hours'        'hours'
     'minutes'      'minutes'
     'seconds'      'seconds'
     'microseconds' 'microseconds'
     'kilowatts'    'kilowatts'
     'milliamperes' 'milliamperes'
     'kilovolts'    'kilovolts'
     'KeV'          'kiloelectron volts (electron volts * 10^(3)'

#########################
## CATEGORY_GROUP_LIST ##
#########################

loop_
_category_group_list.id
_category_group_list.parent_id
_category_group_list.description
             'inclusive_group'
             .
;             All categories
;
             'bsync_group'
             .
;             Categories which pertain to the BIOSYNC project
;

### EOF mmcif_biosync-data.dic
